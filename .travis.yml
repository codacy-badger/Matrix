language: cpp

sudo: required
dist: trusty

# safelist
branches:
  only:
  - master
  - dev
  - feature/travis

matrix:
  include:

    ###########################################################################
    # GCC on Linux.
    #

    #
    # GCC 7 Release.
    #
    - os: linux
      env:
        - JOB="GCC 8 Release"
        - CC_COMPILER=gcc-8
        - CXX_COMPILER=g++-8
        - BUILD_TYPE=Release
      addons: &gcc8
        apt:
          packages:
            - gcc-8
            - g++-8
          sources:
            - ubuntu-toolchain-r-test
      script:
        - cd "${TRAVIS_BUILD_DIR}"
        - mkdir -p build && cd build
        - |
          conan install .. --build missing \
            -s build_type=${BUILD_TYPE} \
        - cmake .. -DCMAKE_BUILD_TYPE:STRING=${BUILD_TYPE}
        - cmake --build . --config ${BUILD_TYPE} -- -j2

    #
    # GCC 8 Release + tests.
    #
    - os: linux
      env:
        - JOB="GCC 8 Release + Codecov and Coveralls"
        - CC_COMPILER=gcc-8
        - CXX_COMPILER=g++-8
        - BUILD_TYPE=Release
        - ENABLE_TESTING=TRUE
      addons: *gcc8
      script:
        - cd "${TRAVIS_BUILD_DIR}"
        - mkdir -p build && cd build
        - |
          conan install .. --build missing \
            -s build_type=${BUILD_TYPE} \
            -s compiler.libcxx=libstdc++11
        - |
          cmake .. \
            -DCMAKE_BUILD_TYPE:STRING=${BUILD_MODE} \
            -DENABLE_TESTING:BOOL=${ENABLE_TESTING} \
        - cmake --build . --config ${BUILD_TYPE} -- -j2
      after_success:
        - ctest --extra-verbose --parallel 2

install:
  # Set up the environment.
  - |
    if [ "${TRAVIS_OS_NAME}" == "linux" ]; then
      # Set the ${CC} variable properly.
      export CC=${CC_COMPILER}
    fi
  # Set the ${CXX} variable properly.
  - export CXX=${CXX_COMPILER}

  # Dependencies required by the CI are installed in ${TRAVIS_BUILD_DIR}/deps/.
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p "${DEPS_DIR}" && cd "${DEPS_DIR}"
  # Install a recent CMake and Conan.
  - |
    if [ "${TRAVIS_OS_NAME}" == "linux" ]; then
      CMAKE_VERSION=3.10.0
      CMAKE_ARCH=cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz
      CMAKE_URL="https://cmake.org/files/v${CMAKE_VERSION%.[0-9]}/${CMAKE_ARCH}"
      mkdir cmake && travis_retry wget --no-check-certificate -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
      sudo pip install conan
    else
      brew update
      brew install cmake || brew upgrade cmake
      brew install conan || brew upgrade conan
    fi